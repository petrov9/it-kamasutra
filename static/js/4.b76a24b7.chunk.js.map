{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","s","dialog","src","state","avatarImage","to","id","name","Message","message","isMyMessage","myMessage","notMyMessage","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogsElements","dialogsPage","dialogs","map","e","messagesElements","messages","isAuth","dialogsItems","values","sendMessageClick","newMessageBody","mapStateToPropsForRedirect","auth","compose","connect","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,UAAY,2BAA2B,aAAe,gC,oBCAlSD,EAAOC,QAAU,CAAC,QAAU,4BAA4B,aAAe,iCAAiC,OAAS,2BAA2B,OAAS,2BAA2B,SAAW,6BAA6B,QAAU,8B,+GCYnNC,EATI,SAACC,GAChB,OACI,sBAAKC,UAAWC,IAAEC,OAAlB,UACI,qBAAKC,IAAKJ,EAAMK,MAAMC,cACtB,cAAC,IAAD,CAASC,GAAI,YAAcP,EAAMK,MAAMG,GAAvC,SAA4CR,EAAMK,MAAMI,WCGrDC,EARC,SAACV,GACb,OACI,qBAAKC,UAAWC,IAAES,UAAYX,EAAMK,MAAMO,YAAcV,IAAEW,UAAYX,IAAEY,cAAxE,SACKd,EAAMK,MAAMM,W,yCCGrBI,EAAcC,YAAiB,IAiB7BC,EAAsBC,YAAU,CAClCC,KAAM,wBADkBD,EAfL,SAAClB,GACtB,OACI,uBAAMoB,SAAUpB,EAAMqB,aAAtB,UACI,8BACE,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUf,KAAM,iBAC3BgB,SAAU,CAACC,IAAUX,GACrBY,YAAY,yBAErB,8BACI,oGAmCCC,EAzBC,SAAC5B,GACb,IAAI6B,EAAkB7B,EAAM8B,YAAYC,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAY5B,MAAO4B,OACxEC,EAAmBlC,EAAM8B,YAAYK,SAASH,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAS5B,MAAO4B,OAM3E,OAAKjC,EAAMoC,OAKP,sBAAKnC,UAAWC,IAAE6B,QAAlB,UACI,qBAAK9B,UAAWC,IAAEmC,aAAlB,SACKR,IAEL,qBAAK5B,UAAWC,IAAEiC,SAAlB,SACI,8BAAMD,MAEV,cAACjB,EAAD,CAAqBG,SAhBT,SAACkB,GACjBtC,EAAMuC,iBAAiBD,EAAOE,sBAIvB,cAAC,IAAD,CAAUjC,GAAI,Y,+CCnCzBkC,EAA6B,SAACpC,GAC9B,MAAO,CACH+B,OAAQ/B,EAAMqC,KAAKN,S,OCOZO,sBACXC,aAPkB,SAACvC,GACnB,MAAO,CACHyB,YAAazB,EAAMyB,eAKE,CAACS,wBDJE,SAACM,GAAe,IACtCC,EADqC,4JAEvC,WACI,OAAKC,KAAK/C,MAAMoC,OAET,cAACS,EAAD,eAAeE,KAAK/C,QAFI,cAAC,IAAD,CAAUO,GAAI,eAHV,GACXyC,aAUhC,OAFiCJ,YAAQH,EAARG,CAAoCE,KCN1DH,CAGbf","file":"static/js/4.b76a24b7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3OER_\",\"dialogsItems\":\"Dialogs_dialogsItems__2NyO2\",\"active\":\"Dialogs_active__3-8fN\",\"dialog\":\"Dialogs_dialog__3JPaC\",\"messages\":\"Dialogs_messages__bhlB4\",\"message\":\"Dialogs_message__eJn46\",\"myMessage\":\"Dialogs_myMessage__1IjlN\",\"notMyMessage\":\"Dialogs_notMyMessage__2u3H-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"DialogItem_dialogs__3_J_2\",\"dialogsItems\":\"DialogItem_dialogsItems__2DLVV\",\"active\":\"DialogItem_active__2i7ul\",\"dialog\":\"DialogItem_dialog__3xuAZ\",\"messages\":\"DialogItem_messages__1L8vV\",\"message\":\"DialogItem_message__17TC-\"};","import s from './DialogItem.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={s.dialog}>\r\n            <img src={props.state.avatarImage}/>\r\n            <NavLink to={'/dialogs/' + props.state.id}>{props.state.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import s from './../Dialogs.module.css'\r\nimport React from \"react\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message && (props.state.isMyMessage ? s.myMessage : s.notMyMessage)}>\r\n            {props.state.message}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;","import s from './Dialogs.module.css'\r\nimport React from \"react\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {Textarea} from \"../common/FormControls/FormsControls\";\r\n\r\nlet maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n      <form onSubmit={props.handleSubmit}>\r\n          <div>\r\n            <Field component={Textarea} name={\"newMessageBody\"}\r\n                   validate={[required, maxLength50]}\r\n                   placeholder='Enter your message'/>\r\n          </div>\r\n          <div>\r\n              <button>Отправить</button>\r\n          </div>\r\n      </form>\r\n  )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({\r\n    form: \"dialogAddMessageForm\"\r\n}) (AddMessageForm)\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsElements = props.dialogsPage.dialogs.map(e => <DialogItem state={e}/>);\r\n    let messagesElements = props.dialogsPage.messages.map(e => <Message state={e}/>)\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessageClick(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) {\r\n        return <Redirect to={\"/login\"}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import * as React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"}/>\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedRedirectComponent;\r\n}","import React from \"react\";\r\nimport {sendMessageClick} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    };\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {sendMessageClick}),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}