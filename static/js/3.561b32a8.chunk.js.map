{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateUserStatus","ProfileInfo","profile","Preloader","contacts","facebook","push","website","vk","className","s","descBlock","src","photos","large","Post","item","alt","id","message","likeCount","maxLength10","maxLengthCreator","MyPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPosts","React","memo","posts","reverse","map","likesCount","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","Profile","ProfileContainer","render","userId","this","match","params","authorizedUserId","history","getProfile","getUserStatus","prevProps","prevState","setState","Component","compose","auth","isAuth","withRouter"],"mappings":"iHACAA,EAAOC,QAAU,CAAC,UAAY,iC,oBCA9BD,EAAOC,QAAU,CAAC,WAAa,4BAA4B,MAAQ,yB,oBCAnED,EAAOC,QAAU,CAAC,KAAO,qB,sJC2CVC,EA1CgB,SAACC,GAE5B,MAA8BC,oBAAS,GAAvC,mBAAKC,EAAL,KAAeC,EAAf,KACA,EAA0BF,mBAASD,EAAMI,QAAzC,mBAAKA,EAAL,KAAaC,EAAb,KAEAC,qBAAU,WACND,EAAUL,EAAMI,UACjB,CAACJ,EAAMI,SAeV,OACI,iCAESF,GACD,8BACI,sBAAMK,cAlBG,WACrBJ,GAAY,IAiBA,SAAwCH,EAAMI,QAAU,gBAI5DF,GACA,8BACI,uBAAOM,SAfA,SAACC,GACpBJ,EAAUI,EAAEC,cAAcC,QAcmBC,WAAW,EAAMC,OApBvC,WACvBV,GAAY,GACZH,EAAMc,iBAAiBV,IAmBJO,MAAOP,UCMnBW,EArCK,SAAC,GAAyC,IAAxCC,EAAuC,EAAvCA,QAASZ,EAA8B,EAA9BA,OAAQU,EAAsB,EAAtBA,iBACnC,IAAKE,EACD,OAAO,cAACC,EAAA,EAAD,IAGX,IAAIC,EAAW,GAWf,OAVIF,EAAQE,SAASC,UACjBD,EAASE,KAAK,4BAAIJ,EAAQE,SAASC,YAEnCH,EAAQE,SAASG,SACjBH,EAASE,KAAK,4BAAIJ,EAAQE,SAASG,WAEnCL,EAAQE,SAASI,IACjBJ,EAASE,KAAK,4BAAIJ,EAAQE,SAASI,MAInC,8BACI,sBAAKC,UAAWC,IAAEC,UAAlB,UACI,8BACI,qBAAKC,IAAKV,EAAQW,OAAOC,UAE7B,8BACI,cAAC,EAAD,CAAwBxB,OAAQA,EAAQU,iBAAkBA,MAE9D,gCACI,6CACA,8BACKI,a,oDCnBVW,EAZF,SAAC7B,GACV,OACI,sBAAKuB,UAAWC,IAAEM,KAAlB,UACI,qBAAKJ,IAAI,0EAA0EK,IAAI,GAAGC,GAAG,QAC5FhC,EAAMiC,QACP,gCACI,wCADJ,IACuBjC,EAAMkC,iB,iCCDrCC,EAAcC,YAAiB,IAgB7BC,EAAkBC,YAAU,CAC9BC,KAAM,yBADcD,EAdD,SAACtC,GACpB,OACI,uBAAMwC,SAAUxC,EAAMyC,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,KAAM,cAAeC,YAAa,eACvDC,SAAU,CAACC,IAAUb,OAEhC,8BACI,sDA+BDc,EArBCC,IAAMC,MAAK,SAACnD,GAExB,IAAIoD,EAAQ,YAAIpD,EAAMoD,OAAOC,UAAUC,KAAI,SAAA7C,GAAC,OAAI,cAAC,EAAD,CAAMuB,GAAIvB,EAAEuB,GAAIC,QAASxB,EAAEwB,QAASC,UAAWzB,EAAE8C,gBAMjG,OACI,sBAAKhC,UAAWC,IAAEgC,WAAlB,UACI,gCACI,0CACA,cAACnB,EAAD,CAAiBG,SARb,SAACiB,GACbzD,EAAM0D,QAAQD,EAAOE,mBASjB,qBAAKpC,UAAWC,IAAE4B,MAAlB,SACKA,U,QC1BFQ,EAJUC,aAPH,SAACC,GACnB,MAAO,CACHV,MAAOU,EAAMC,YAAYX,MACzBO,YAAaG,EAAMC,YAAYJ,eAIW,CAC9CD,aADqBG,CAEtBZ,GCCYe,EATC,SAAChE,GACb,OACI,gCACI,cAAC,EAAD,CAAagB,QAAShB,EAAMgB,QAASZ,OAAQJ,EAAMI,OAAQU,iBAAkBd,EAAMc,mBACnF,cAAC,EAAD,Q,eCHNmD,E,4MAwBFC,OAAS,WACL,OACI,cAAC,EAAD,2BAAa,EAAKlE,OAAlB,IAAyBgB,QAAS,EAAKhB,MAAMgB,QAASZ,OAAQ,EAAKJ,MAAMI,OAAQU,iBAAkB,EAAKd,MAAMc,qB,uDAxBtH,WACI,IAAIqD,EAASC,KAAKpE,MAAMqE,MAAMC,OAAOH,OAChCA,IACDA,EAASC,KAAKpE,MAAMuE,mBAGhBH,KAAKpE,MAAMwE,QAAQpD,KAAK,UAGhCgD,KAAKpE,MAAMyE,WAAWN,GACtBC,KAAKpE,MAAM0E,cAAcP,K,gCAI7B,SAAmBQ,EAAWC,GACtBD,EAAUvE,QAAUgE,KAAKpE,MAAMI,QAC/BgE,KAAKS,SAAS,CACVzE,OAAQgE,KAAKpE,MAAMI,a,GAnBJ8C,IAAM4B,WAyCtBC,sBACXlB,aAXkB,SAACC,GAEnB,MAAO,CACH9C,QAAS8C,EAAMC,YAAY/C,QAC3BZ,OAAQ0D,EAAMC,YAAY3D,OAC1BmE,iBAAkBT,EAAMkB,KAAKb,OAC7Bc,OAAQnB,EAAMkB,KAAKC,UAKE,CAACR,eAAYC,kBAAe5D,uBACrDoE,IAFWH,CAIbd","file":"static/js/3.561b32a8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descBlock\":\"ProfileInfo_descBlock__3Sq7v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__7WCXS\",\"posts\":\"MyPosts_posts__37ZFd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__36fwr\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateUserStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"No status\"}</span>\r\n                </div>\r\n            }\r\n            {\r\n                editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                           value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport React from \"react\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateUserStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    let contacts = [];\r\n    if (profile.contacts.facebook) {\r\n        contacts.push(<p>{profile.contacts.facebook}</p>)\r\n    }\r\n    if (profile.contacts.website) {\r\n        contacts.push(<p>{profile.contacts.website}</p>)\r\n    }\r\n    if (profile.contacts.vk) {\r\n        contacts.push(<p>{profile.contacts.vk}</p>)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descBlock}>\r\n                <div>\r\n                    <img src={profile.photos.large}/>\r\n                </div>\r\n                <div>\r\n                    <ProfileStatusWithHooks status={status} updateUserStatus={updateUserStatus}/>\r\n                </div>\r\n                <div>\r\n                    <p>My contacts:</p>\r\n                    <div>\r\n                        {contacts}\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://www.meme-arsenal.com/memes/100773de10bd652a2366e129c5053a0a.jpg\" alt=\"\" id=\"src\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>like</span> {props.likeCount}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormControls/FormsControls\";\r\n\r\nlet maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewFormPost = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={\"newPostText\"} placeholder={\"Post message\"}\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MyPostReduxForm = reduxForm({\r\n    form: \"ProfileAddNewFormPost\"\r\n})(AddNewFormPost)\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    let posts = [...props.posts].reverse().map(e => <Post id={e.id} message={e.message} likeCount={e.likesCount}/>)\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <div>\r\n                <h3>My posts</h3>\r\n                <MyPostReduxForm onSubmit={onAddPost}/>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {posts}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPost} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    };\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {\r\n    addPost\r\n})(MyPosts);\r\n\r\nexport default MyPostsContainer;","import s from './Profile.module.css'\r\n\r\nimport React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateUserStatus={props.updateUserStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {getProfile, getUserStatus, updateUserStatus} from \"../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n\r\n            if (!userId){\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status != this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateUserStatus={this.props.updateUserStatus}/>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfile, getUserStatus, updateUserStatus}),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(ProfileContainer)"],"sourceRoot":""}